version: '3.9'

services:

  db:
    image: postgres:14-alpine
    container_name: magazine_db
    restart: unless-stopped
    volumes:
      - mag_postgresql_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:latest
    container_name: magazine_redis
    restart: always
    command: >
          --requirepass ${REDIS_PASSWORD}
    expose:
      - 6379
    env_file:
      - ./.env

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    container_name: magazine_django
    restart: always
    entrypoint: [ "sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 magazine.wsgi:application" ]
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: magazine_celery
    restart: always
    entrypoint: [ "sh", "-c", "celery -A magazine worker --loglevel=info" ]
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - web
      - db
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: magazine_beat
    restart: always
    entrypoint: ["sh", "-c", "celery -A magazine beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler"]
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      - web
      - db
      - redis
      - celery

volumes:
  postgresql_volume:
